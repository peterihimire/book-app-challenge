version: "3.8"

services:
  nginx:
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - api
    networks:
      appnet:
        ipv4_address: 192.175.0.2
    restart: always
  db:
    container_name: pg_db
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./data/dbdata:/var/lib/postgresql/data
    networks:
      appnet:
        ipv4_address: 192.175.0.3
    ports:
      - 5439:5432
    restart: always
    env_file:
      - .env
  api:
    build:
      context: .
      target: development
    image: peterihimire/book-app-challenge
    platform: linux/amd64
    depends_on:
      - db
    networks:
      appnet:
        ipv4_address: 192.175.0.5
    environment:
      - NODE_ENV=development
      - DB_HOST=db
      - PORT=${PORT}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_KEY=${JWT_KEY}
   
    volumes:
      - ./:/app
      - /app/node_modules
    ports:
      - 8083:8083
    restart: always
    env_file:
      - .env
    command: npm run dev

networks:
  appnet:
    driver: bridge
    ipam:
      config:
        - subnet: "192.175.0.0/24"
          gateway: 192.175.0.1
